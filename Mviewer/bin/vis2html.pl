#!/usr/bin/perl

#
# Author: Ahfyth
#

use strict;
use warnings;

if( $#ARGV < 1 )
{
	print STDERR "\nUsage: $0 <in.vis> <output.prefix> [pace=auto]\n\n";
	exit 2;
}

my $prgdir = `dirname $0`;
chomp( $prgdir );
if( $prgdir !~ /^\// ) {	## change to abosolute path
	my $currDIR = `pwd`;
	chomp($currDIR);
	$prgdir = "$currDIR/$prgdir";
#	print STDERR "$prgdir\n";
}

my $pace = $ARGV[2] || 'auto';	## pace for the markers

open HTML, ">$ARGV[1].html" or die( "$!" );

open IN, "$ARGV[0]" or die( "$!" );
my $id = <IN>;	## gene=XXX
chomp( $id );
$id =~ s/^\S+=//;
my $pos = <IN>;	## position=chrXX:XXX-XXX
$pos =~ /(chr\S+):(\d+)-(\d+)/;
my ( $chr, $start, $end ) = ( $1, $2, $3 );
my $seq = <IN>;	## genomic sequence
chomp($seq);
my $seqLen = length($seq);
$end = $start + $seqLen - 1;	## fix the real end position

if( $pace eq 'auto' )
{
	if( length($seq) <= 300 )	{$pace = 50; }
	elsif( length($seq) <= 500)	{$pace = 80; }
	else						{$pace = 100;}
}

my $posbar  = '';
my $markbar = '';
my $increment = 0;
while( length($posbar) < length($seq) )
{
	my $curr = $start + $increment;
	$increment += $pace;
	$posbar .= $curr;
	$posbar .= ' ' x ($pace-length($curr));	## add whitespace
	$markbar .= '|';
	$markbar .= ' ' x ($pace-1);
}
$posbar =~ s/\s+$//;
$markbar =~ s/\s+$//;

my $fontdir = `readlink -f $prgdir/../font`;
chomp($fontdir);
my $fontsize = 12;
$fontsize = 14 if length($seq) <= 200;
$fontsize = 8  if length($seq) >= 500;

$seq =~ s/CG/<span class="sC">C<\/span>G/g;

print HTML "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"
\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">
<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">
<head>
<meta charset=\"UTF-8\">
<title>$id</title>
<style type=\"text/css\">

\@font-face {
	font-family: \"Cousine\";
	src: url($fontdir/Cousine-Regular.ttf) format(\"truetype\");
}
\@font-face {
	font-family: \"Cousine\";
	font-weight: bold;
	src: url($fontdir/Cousine-Bold.ttf) format(\"truetype\");
}

pre {
	font-family: \"Cousine\" \"Courier\" monospace;
	font-size: $fontsize px;
}

span.seqgap{color: #d0d0d0;}

span.unmeth{background-color: #d0d0d0;}
span.meth{background-color: #000000;}

span.sA{color: #5050FF; font-weight: bold;}
span.sC{color: #e00000; font-weight: bold;}
span.sG{color: #00c000; font-weight: bold;}
span.sT{color: #e6e600; font-weight: bold;}
</style>
</head>
<body>
<center><h2>$chr:$start-$end</h2></center>
<hr width=\"100%\" />
<pre>
$posbar
$markbar
$seq\n";

my $readCnt = 0;
while( <IN> ) {
	chomp;
#	s/=/./g;
	if( /^\./ )	{s/^\./<span class="seqgap">./}
	else		{s/([^\.])\./$1<span class="seqgap">./;}
	if( /\.$/)	{s/\.$/\.<\/span>/;}
	else		{s/\.([^\.])/.<\/span>$1/;}
#	s/M/&#007;/;
#	s/U/&Omicron;/g;
	s/M/<span class="meth"> <\/span>/g;
	s/U/<span class="unmeth"> <\/span>/g;

#	s/([ACGT])/<span>$1<\/span>/g;
	s/A/<span class="sA">A<\/span>/g;
	s/C/<span class="sC">C<\/span>/g;
	s/G/<span class="sG">G<\/span>/g;
	s/T/<span class="sT">T<\/span>/g;
	print HTML "$_\n";
	++ $readCnt;
}
close IN;

## print the code scheme and timestamp
my $timestamp = localtime;

print HTML "\n<br /><hr width=\"50%\" align=\"left\" />\n",
	  "<b>Code scheme</b>\n<ul>\n",
	  "<li>-: sequenced neucleotide that matches the reference genome</li>\n",
	  "<li>D: deletions in the sequence</li>\n",
	  "<li>A/C/G/T: sequenced neucleotide that does not match the reference genome</li>\n",
	  "<li><span class=\"meth\"> <\/span>: methylated CpG site</li>\n",
	  "<li><span class=\"unmeth\"> <\/span>: unmethylated CpG site</li>\n",
	  "<li><span class=\"seqgap\">.</span>: sequencing gap in the paired-end data (if any)</li>\n",
	  "</ul>\n<br /><hr width=\"100%\" />\n",
	  "<h2>Generated by Mviewer, a component of the ",
	  "<a href=\"https://github.com/hellosunking/Msuite\" target=\"_blank\">Msuite</a> package,",
	  " $timestamp</h2>\n";
print HTML "</pre>\n</body>\n</html>";
close HTML;


## Prepare script for html2pdf
## estimate the paper size and orientation
my $orientation = 'Portrait';
$orientation = 'Landscape' if $seqLen > $readCnt*2;

my $paper = 'A4';
if( $orientation eq 'Portrait' ) {
	$paper = 'A3' if $seqLen > 160;
	$paper = 'A2' if $seqLen > 280;
	$paper = 'A1' if $seqLen > 400;
} else {
	$paper = 'A3' if $seqLen > 240;
	$paper = 'A2' if $seqLen > 400;
	$paper = 'A1' if $seqLen > 600;
}

open CMD, ">$ARGV[1].html2pdf.sh" or die( "$!" );
print CMD "$prgdir/wkhtmltopdf -s $paper -O $orientation $ARGV[1].html $ARGV[1].pdf";
close CMD;

